version: '3'
services:
  geth:
    image: ethereum/client-go:latest
    ports:
      - "8545:8545" # прослушиваемый порт Etherium JSON-RPC
      - "30303:30303" # прослушиваемый порт P2P
      - "30303:30303/udp"
    volumes:
      - ./data:/root/ethdata
    command: --dev --http --http.api='eth,net,web3' --http.addr='0.0.0.0' --http.corsdomain='*' --allow-insecure-unlock --nodiscover

#     Этот композ-файл определяет контейнер Docker для запуска клиента Ethereum (geth) с использованием образа ethereum/client-go:latest. Композ-файл содержит следующие пункты:

#     version: '3': Это версия формата композ-файла, которая указывает на использование версии 3.

#     services: Здесь определяются сервисы, которые будут запущены с использованием этого композ-файла. В данном случае есть только один сервис - geth.

#     geth: Это имя сервиса, который будет запущен. Он определяет контейнер для клиента Ethereum (geth).

#     image: ethereum/client-go:latest: Это определяет образ Docker, который будет использоваться для создания контейнера. В данном случае используется образ ethereum/client-go с тегом latest, что означает последнюю доступную версию клиента Ethereum.

#     ports: Здесь определяются порты, которые будут проксированы из контейнера на хостовую машину. В данном случае проксируются три порта: 8545 для Etherium JSON-RPC, 30303 для P2P и 30303/udp для P2P через протокол UDP.

#     volumes: Это определяет связывание (монтирование) директории в контейнере с директорией на хостовой машине. В данном случае директория ./data на хостовой машине будет связана с директорией /root/ethdata в контейнере. Это позволяет сохранять данные Ethereum между перезапусками контейнера.

#     command: Здесь указываются дополнительные параметры командной строки, передаваемые при запуске контейнера. В данном случае используются следующие ключи:
#         --dev: Запуск в режиме разработки, создание приватной сети.
#         --http: Включение HTTP-интерфейса JSON-RPC.
#         --http.api='eth,net,web3': Включение API для Ethereum (eth), сети (net) и Web3 (web3).
#         --http.addr='0.0.0.0': Указание адреса, на котором будет прослушиваться JSON-RPC.
#         --http.corsdomain='*': Разрешение всех доменов для доступа к JSON-RPC через CORS (Cross-Origin Resource Sharing).
#         --allow-insecure-unlock: Разрешение использования небезопасного разблокирования (для тестовых целей).
#         --nodiscover: Отключение автоматического обнаружения узлов в сети.

# Таким образом, этот композ-файл запускает контейнер с клиентом Ethereum, который прослушивает указанные порты, включает JSON-RPC API для Ethereum, сети и Web3, позволяет соединяться с любым доменом через CORS, разрешает небезопасное разблокирование и отключает автоматическое обнаружение узлов в сети.